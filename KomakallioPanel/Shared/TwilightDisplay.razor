@using System.Globalization;
<div>
    @{
        var latitude = 60.17;
        var longitude = 24.39;
        var time = DateTime.UtcNow;
        var sunPos = SunCalcNet.SunCalc.GetSunPosition(time, latitude, longitude);
        var sunPhases = SunCalcNet.SunCalc.GetSunPhases(time, latitude, longitude, 0).ToArray();
        var sunsetTime = sunPhases
            .Single(p => p.Name.Value == SunCalcNet.Model.SunPhaseName.Sunset.Value)
            .PhaseTime;
        var moonPos = SunCalcNet.MoonCalc.GetMoonPosition(time, latitude, longitude);
        var moonIllumination = SunCalcNet.MoonCalc.GetMoonIllumination(time);
        var moonIlluminationPercent = 100.0 * moonIllumination.Fraction;
    }
    <p>
        Sun altitude: @RadianToDegree(@sunPos.Altitude).ToString("F2", CultureInfo.InvariantCulture)°
    </p>
    <p>
        Sun sets in @((sunsetTime - time).TotalMinutes.ToString("F2", CultureInfo.InvariantCulture)) minutes
    </p>
    <p>
        Moon altitude: @RadianToDegree(@moonPos.Altitude).ToString("F2", CultureInfo.InvariantCulture)°
    </p>
    <p>
        Moon illumination: @moonIlluminationPercent.ToString("F2", CultureInfo.InvariantCulture)%
    </p>
</div>

@code {
    double RadianToDegree(double radian)
    {
        return 180.0 * radian / Math.PI;
    }
}
